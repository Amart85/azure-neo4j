#!/bin/bash

if [ -z "$RESOURCE_GROUP" ]; then
    RESOURCE_GROUP=Neo4j
fi
if [ -z "$DEPLOYMENT" ]; then
    DEPLOYMENT="$(TZ=0 date +'Neo4j-HA-%Y%m%dT%H%M%SZ')"
fi
if [ -z "$LOCATION" ]; then
    LOCATION="East US"
fi
if [ -z "$CLUSTERNAME_PREFIX" ]; then
    CLUSTERNAME_PREFIX="neo$(cat /dev/urandom | env LC_CTYPE=C tr -cd 'a-z0-9A-Z' | head -c 8)"
fi
if [ -z "$INSTANCES" ]; then
    INSTANCES=1
fi
if [ -z "$NEO4J_PASSWORD" ]; then
    read -p "Neo4j Password: " -s NEO4J_PASSWORD
    echo
fi

if [ -z "$PUBKEY" ]; then
    PUBKEY=$(cat ~/.ssh/id_rsa.pub)
fi
if [ -z "$USERNAME" ]; then
    USERNAME=$(whoami)
fi

EXTENSION=""
if [ -n "$1" -a -f "$1" ]; then
    if [[ "$1" != *"/"* ]]; then
        if git -C "$(dirname $0)" ls-files "$1" --error-unmatch >/dev/null; then
            EXTENSION=$(cat<<EXTENSION_JSON
,
    "extensionScript": {
        "value": "$1"
    }
EXTENSION_JSON
)
        fi
    fi
fi

PARAMETERS=$(cat<<JSON
{
    "ClusterNamePrefix": {
        "value": "$CLUSTERNAME_PREFIX"
    },

    "VmCount": {
        "value": $INSTANCES
    },
    "VmSize": {
        "value": "Standard_A1"
    },

    "AdminUserName": {
        "value": "$USERNAME"
    },
    "AuthBySSH": {
        "value": true
    },
    "AuthCredential": {
        "value": "$PUBKEY"
    },

    "VnetNewOrExisting": {
        "value": "new"
    },
    "NetworkName": {
        "value": "neoVnet"
    },
    "NetworkAddressPrefix": {
        "value": "10.0.0.0/16"
    },
    "SubnetName": {
        "value": "NeoVnetSubnet1"
    },
    "SubnetAddressPrefix": {
        "value": "10.0.1.0/24"
    },
    "SubnetStartAddress": {
        "value": "10.0.1.0"
    },

    "publicIPAddressName": {
        "value": "NeoA001"
    },
    "publicIPAddressExists": {
        "value": "new"
    },
    "publicIPAllocationMethod": {
        "value": "Dynamic"
    },
    "publicIPIdleTimeoutInMinutes": {
        "value": 10
    },

    "Neo4jPassword": {
        "value": "$NEO4J_PASSWORD"
    },
    "cacheMemoryPercentage": {
        "value": 42
    },

    "ArtifactsBase": {
        "value": "https://raw.githubusercontent.com/thobe/carcassour/master"
    }$EXTENSION
}
JSON
)

#echo "$PARAMETERS"
#exit

__CREATED=""
if ! azure group show "$RESOURCE_GROUP" &> /dev/null; then
    if ! azure group create -n "$RESOURCE_GROUP" -l "$LOCATION"; then
        exit $?
    fi
    __CREATED=yes
fi

azure group deployment create\
    --template-uri "https://raw.githubusercontent.com/thobe/carcassour/master/mainTemplate.json" \
    -p "$PARAMETERS" -g "$RESOURCE_GROUP" -n "$DEPLOYMENT"
CODE=$?

#if [ $CODE -ne 0 -a -n "$__CREATED" ]; then
#    azure group delete -q "$RESOURCE_GROUP"
#fi

#azure group deployment create -f mainTemplate.json -p "$PARAMETERS" -g "$RESOURCE_GROUP" -n "$DEPLOYMENT"

exit $CODE
