{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Neo4jVersion": {
            "type": "string",
            "defaultValue": ""
        },
        "Neo4jPassword": {
            "type": "securestring",
            "defaultValue": ""
        },
        "AdminUserName": {
            "type": "securestring"
        },
        "ClusterNamePrefix": {
            "type": "string",
            "minLength": 1,
            "maxLength": 11 /* Storage Account is most restrictive at 24 char name cap, UniqueID is 13, so 24-13=11. */
        },
        "AuthBySSH": { /* true if using SSH for VM auth, false means password auth. */
            "type": "bool"
        },
        "AuthCredential": { /* Either the admin password or SSH key, dictated by AuthBySSH */
            "defaultValue": null,
            "type": "securestring"
        },
        "VmCount": {
            "type": "int",
            "minValue": 1,
            "defaultValue": 1
        },
        "VmSize": {
            "type": "string"
        },
        "Location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "VnetNewOrExisting": {
            "type": "string",
            "allowedValues": [
                "new",
                "existing"
            ]
        },
        "NetworkName": {
            "type": "string"
        },
        "NetworkAddressPrefix": { /* e.g., 1.2.3.4/16 */
            "type": "string"
        },
        "SubnetName": {
            "type": "string"
        },
        "SubnetAddressPrefix": { /* e.g. 1.2.3.0/24 */
            "type": "string"
        },
        "SubnetStartAddress": {
            "type": "string"
        },
        "ResourceGroupName": { /* the RG which owns the existing VNET */
            "type": "string",
            "defaultValue": "[resourceGroup().name]"
        },
        "publicIPAddressName": {
            "defaultValue": "NeoA001",
            "type": "string"
        },
        "publicIPAddressExists": {
            "type": "string",
            "allowedValues": [
                "new",
                "existing"
            ]
        },
        "publicIPAllocationMethod": {
            "type": "string",
            "allowedValues": [
                "Static",
                "Dynamic"
            ],
            "defaultValue": "Dynamic"
        },
        "publicIPIdleTimeoutInMinutes": {
            "type": "int",
            "defaultValue": 10,
            "minValue": 4,
            "maxValue": 30,
            "metadata": {
                "description": "Time to wait before reclaiming a 'no-traffic' connection as idle"
            }
        },
        "cacheMemoryPercentage": {
            "type": "int",
            "defaultValue": -1,
            "maxValue": 100,
            "metadata": {
                "description": "0..100% portion of Neo4j memory to dedicate to cache.  Negative values mean use current configuration file value."
            }
        },
        "ArtifactsBase": {
            "type": "string",
            "metadata": {
                "artifactsBaseUrl": "", /* do not remove or change this property */
                "description": "base URL at which Marketplace package files are stored. Value adjusted automatically during Marketplace submission process."
            },
            "defaultValue": "https://raw.githubusercontent.com/thobe/carcassour/master"
        },
        "extensionScript": {
            "type": "string",
            "defaultValue": "setup.sh"
        },
        "httpsPort": {
            "type": "int",
            "defaultValue": 7473,
            "metadata": {
                "description": "The port to use for (public) HTTPS access."
            }
        },
        "masterBoltPort": {
            "type": "int",
            "defaultValue": 7000,
            "metadata": {
                "description": "The port to use for (public) BOLT access to the primary instance."
            }
        },
        "slaveBoltPort": {
            "type": "int",
            "defaultValue": 8000,
            "metadata": {
                "description": "The port to use for (public) BOLT access to the secondary instances."
            }
        },
        "httpPort": {
            "type": "int",
            "defaultValue": 7474,
            "metadata": {
                "description": "The port to use for (private) HTTP access. This is used by the load balancer probes. Must not conflict with other ports."
            }
        }
    },
    "variables": {
        "artifactsBase": "[concat(parameters('ArtifactsBase'),'/')]",
        "saSuffixDigits": 2 /* use 2 digit storage account suffixes */
    },
    "resources": [
        { /* Build lists of Storage account information needed by main deployment */
            "type": "Microsoft.Resources/deployments",
            "name": "SAConstructor",
            "apiVersion": "2015-01-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('artifactsBase'), 'generateStorageAccounts.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "numberOfVMs": {
                        "value": "[parameters('VmCount')]"
                    },
                    "vhdsPerVM": {
                        "value": 2 /* OS drive + 1 data drive */
                    },
                    "sequentialPadWidth": {
                        "value": "[variables('saSuffixDigits')]"
                    },
                    "storageAccountNamePrefix": {
                        "value": "[parameters('ClusterNamePrefix')]"
                    }
                }
            }
        },
        { /* Call the "real" main template with original parameters plus the list of storage accounts */
            "type": "Microsoft.Resources/deployments",
            "name": "[concat('CreateCluster-',parameters('ClusterNamePrefix'))]",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "SAConstructor"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('artifactsBase'), 'clusterTemplate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "Neo4jVersion": {
                        "value": "[parameters('Neo4jVersion')]"
                    },
                    "Neo4jPassword": {
                        "value": "[parameters('Neo4jPassword')]"
                    },
                    "AdminUserName": {
                        "value": "[parameters('AdminUserName')]"
                    },
                    "ClusterNamePrefix": {
                        "value": "[parameters('ClusterNamePrefix')]"
                    },
                    "AuthBySSH": {
                        "value": "[parameters('AuthBySSH')]"
                    },
                    "AuthCredential": {
                        "value": "[parameters('AuthCredential')]"
                    },
                    "VmCount": {
                        "value": "[parameters('VmCount')]"
                    },
                    "VmSize": {
                        "value": "[parameters('VmSize')]"
                    },
                    "Location": {
                        "value": "[parameters('Location')]"
                    },
                    "VnetNewOrExisting": {
                        "value": "[parameters('VnetNewOrExisting')]"
                    },
                    "NetworkName": {
                        "value": "[parameters('NetworkName')]"
                    },
                    "NetworkAddressPrefix": {
                        "value": "[parameters('NetworkAddressPrefix')]"
                    },
                    "SubnetName": {
                        "value": "[parameters('SubnetName')]"
                    },
                    "SubnetAddressPrefix": {
                        "value": "[parameters('SubnetAddressPrefix')]"
                    },
                    "SubnetStartAddress": {
                        "value": "[parameters('SubnetStartAddress')]"
                    },
                    "ResourceGroupName": {
                        "value": "[parameters('ResourceGroupName')]"
                    },
                    "publicIPAddressName": {
                        "value": "[parameters('publicIPAddressName')]"
                    },
                    "publicIPAddressExists": {
                        "value": "[parameters('publicIPAddressExists')]"
                    },
                    "publicIPAllocationMethod": {
                        "value": "[parameters('publicIPAllocationMethod')]"
                    },
                    "publicIPIdleTimeoutInMinutes": {
                        "value": "[parameters('publicIPIdleTimeoutInMinutes')]"
                    },
                    "cacheMemoryPercentage": {
                        "value": "[parameters('cacheMemoryPercentage')]"
                    },
                    "saList": {
                        "value": "[reference('SAConstructor').outputs.storageAccountsToProvision.value]"
                    },
                    "saListByVM": {
                        "value": "[reference('SAConstructor').outputs.storageAccountsByVm.value]"
                    },
                    "ArtifactsBase": {
                        "value": "[parameters('ArtifactsBase')]"
                    },
                    "extensionScript": {
                        "value": "[parameters('extensionScript')]"
                    },
                    "httpsPort": {
                        "value": "[parameters('httpsPort')]"
                    },
                    "masterBoltPort": {
                        "value": "[parameters('masterBoltPort')]"
                    },
                    "slaveBoltPort": {
                        "value": "[parameters('slaveBoltPort')]"
                    },
                    "httpPort": {
                        "value": "[parameters('httpPort')]"
                    }
                }
            }
        }
    ]
}
